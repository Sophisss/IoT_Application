AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS CloudFormation Template

Parameters: 
  Project:
    Type: String
    Description: Project name
    
Globals: 
  Function:
    Timeout: 10
    Runtime: python3.11
    CodeUri: ../src/
    MemorySize: 256
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Ref AWS::AccountId
        DYNAMO_REGION: !Ref AWS::Region
    
    
Resources:
    
  IoTApplicationUserPool:
    Type: AWS::Cognito::UserPool
    Properties:  
      UserPoolName: !Sub "${Project}-IoTApplicationUserPoolName"
      Policies: 
        PasswordPolicy: 
          MinimumLength: 8
          RequireUppercase: True
          RequireLowercase: True
          RequireNumbers: True
          RequireSymbols: False
          TemporaryPasswordValidityDays: 14
      LambdaConfig: {}
      AutoVerifiedAttributes:
        - "email"
      UsernameAttributes:
        - "email"
      UserPoolTags:
        Project: !Ref Project
    
    
  UserPoolWebClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      UserPoolId: !Ref IoTApplicationUserPool
      ClientName: "WebClient"
      RefreshTokenValidity: 365
      ExplicitAuthFlows: 
        - "ALLOW_CUSTOM_AUTH"
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_USER_PASSWORD_AUTH"
        - "ALLOW_USER_SRP_AUTH" 
      CallbackURLs:
        - "devq://"
      LogoutURLs:
        - "devq://"
      AllowedOAuthFlows: 
        - "code" 
      AllowedOAuthScopes: 
        - "email"
        - "openid"
        - "profile" 
      AllowedOAuthFlowsUserPoolClient: true
      IdTokenValidity: 60
      AccessTokenValidity: 60
      TokenValidityUnits: 
        AccessToken: "minutes"
        IdToken: "minutes"
        RefreshToken: "days" 
    
    
    

Outputs: 

  IoTApplicationUserPoolId:
    Description: IoT Application User Pool Id
    Value: !Ref IoTApplicationUserPool
    Export:
      Name: !Sub "${Project}-IoTApplicationUserPoolId"
    
    
    