AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Template to create GraphQL API

# region parameters

Parameters:
  Project:
    Type: String
    Description: Name of the project

# endregion

# region globals

Globals:
  Function:
    Timeout: 10
    Runtime: python3.9
    CodeUri: ../src/
    MemorySize: 256
    Environment:
      Variables:
        AWS_ACCOUNT_ID: !Ref AWS::AccountId
        DYNAMO_REGION: !Ref AWS::Region

# endregion

Resources:

  GetDevice:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${Project}-GetDevice"
      Description: Get device by id from DynamoDB table
      CodeUri: ../src/Controller/
      Handler: controller.getDevice
      Role: !GetAtt LambdaExecutionRole.Arn

  GraphQLAPI:
    Type: AWS::Serverless::GraphQLApi
    Properties:
      Auth:
        Type: API_KEY  #IAM
      DataSources:
        Lambda:
          LambdaDataSource:
            Name: !Sub "${Project}_LambdaDataSource"
            Description: Lambda DataSource
            FunctionArn: !GetAtt GetDevice.Arn
      Functions:
        lambdaInvoker:
          CodeUri: ../src/graphql_schema/invoker.js
          DataSource: LambdaDataSource
          Description: Lambda invoker function
          Runtime:
            Name: APPSYNC_JS
            Version: 1.0.0
      Resolvers:
        Query:
          getDevice:
            Pipeline:
              - lambdaInvoker
            Runtime:
              Name: APPSYNC_JS
              Version: 1.0.0
      SchemaUri: ../src/graphql_schema/schema.graphql

  # region Lambda functions roles and policies

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      RoleName: !Sub "${Project}-LambdaExecutionRole"
      AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  # Policy attached to Lambda functions runs

  LambdaExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${Project}-LambdaExecutionPolicy"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "dynamodb:PutItem"
              - "dynamodb:DeleteItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
              - "dynamodb:GetItem"
            Resource:
              - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/IoT"
      Roles:
        - !Ref LambdaExecutionRole

  # endregion

Outputs:
  APIEndpoint:
    Description: AppSync GraphQL API endpoint
    Value: !GetAtt GraphQLAPI.GraphQLUrl

